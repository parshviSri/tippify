"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ipfs-utils";
exports.ids = ["vendor-chunks/ipfs-utils"];
exports.modules = {

/***/ "(ssr)/./node_modules/ipfs-utils/node_modules/browser-readablestream-to-it/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/ipfs-utils/node_modules/browser-readablestream-to-it/index.js ***!
  \************************************************************************************/
/***/ ((module) => {

eval("\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy11dGlscy9ub2RlX21vZHVsZXMvYnJvd3Nlci1yZWFkYWJsZXN0cmVhbS10by1pdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxxQkFBcUI7QUFDOUQ7QUFDQTtBQUNBLFdBQVcsbUJBQW1CO0FBQzlCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFNBQVM7QUFDcEIsYUFBYTtBQUNiO0FBQ0EsZ0VBQWdFO0FBQ2hFOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGlwcGlmeS8uL25vZGVfbW9kdWxlcy9pcGZzLXV0aWxzL25vZGVfbW9kdWxlcy9icm93c2VyLXJlYWRhYmxlc3RyZWFtLXRvLWl0L2luZGV4LmpzPzliZjQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogVHVybnMgYSBicm93c2VyIHJlYWRhYmxlIHN0cmVhbSBpbnRvIGFuIGFzeW5jIGl0ZXJhYmxlLiBBc3luYyBpdGVyYXRpb24gb3ZlclxuICogcmV0dXJuZWQgaXRlcmFibGUgd2lsbCBsb2NrIGdpdmUgc3RyZWFtLCBwcmV2ZW50aW5nIGFueSBvdGhlciBjb25zdW1lciBmcm9tXG4gKiBhY3F1aXJpbmcgYSByZWFkZXIuIFRoZSBsb2NrIHdpbGwgYmUgcmVsZWFzZWQgaWYgaXRlcmF0aW9uIGxvb3AgaXMgYnJva2VuLiBUb1xuICogcHJldmVudCBzdHJlYW0gY2FuY2VsbGluZyBvcHRpb25hbCBgeyBwcmV2ZW50Q2FuY2VsOiB0cnVlIH1gIGNvdWxkIGJlIHBhc3NlZFxuICogYXMgYSBzZWNvbmQgYXJndW1lbnQuXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtSZWFkYWJsZVN0cmVhbTxUPn0gc3RyZWFtXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLnByZXZlbnRDYW5jZWw9Ym9vbGVhbl1cbiAqIEByZXR1cm5zIHtBc3luY0l0ZXJhYmxlPFQ+fVxuICovXG5hc3luYyBmdW5jdGlvbiAqIGJyb3dzZXJSZWFkYWJsZVN0cmVhbVRvSXQgKHN0cmVhbSwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IHJlYWRlciA9IHN0cmVhbS5nZXRSZWFkZXIoKVxuXG4gIHRyeSB7XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlYWRlci5yZWFkKClcblxuICAgICAgaWYgKHJlc3VsdC5kb25lKSB7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICB5aWVsZCByZXN1bHQudmFsdWVcbiAgICB9XG4gIH0gZmluYWxseSB7XG4gICAgaWYgKG9wdGlvbnMucHJldmVudENhbmNlbCAhPT0gdHJ1ZSkge1xuICAgICAgcmVhZGVyLmNhbmNlbCgpXG4gICAgfVxuXG4gICAgcmVhZGVyLnJlbGVhc2VMb2NrKClcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJyb3dzZXJSZWFkYWJsZVN0cmVhbVRvSXRcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-utils/node_modules/browser-readablestream-to-it/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-utils/node_modules/it-all/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/ipfs-utils/node_modules/it-all/index.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy11dGlscy9ub2RlX21vZHVsZXMvaXQtYWxsL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4QkFBOEI7QUFDekM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGlwcGlmeS8uL25vZGVfbW9kdWxlcy9pcGZzLXV0aWxzL25vZGVfbW9kdWxlcy9pdC1hbGwvaW5kZXguanM/ZjAzOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuLyoqXG4gKiBDb2xsZWN0cyBhbGwgdmFsdWVzIGZyb20gYW4gKGFzeW5jKSBpdGVyYWJsZSBpbnRvIGFuIGFycmF5IGFuZCByZXR1cm5zIGl0LlxuICpcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0FzeW5jSXRlcmFibGU8VD58SXRlcmFibGU8VD59IHNvdXJjZVxuICovXG5jb25zdCBhbGwgPSBhc3luYyAoc291cmNlKSA9PiB7XG4gIGNvbnN0IGFyciA9IFtdXG5cbiAgZm9yIGF3YWl0IChjb25zdCBlbnRyeSBvZiBzb3VyY2UpIHtcbiAgICBhcnIucHVzaChlbnRyeSlcbiAgfVxuXG4gIHJldHVybiBhcnJcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhbGxcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-utils/node_modules/it-all/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-utils/src/env.js":
/*!********************************************!*\
  !*** ./node_modules/ipfs-utils/src/env.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst isElectron = __webpack_require__(/*! is-electron */ \"(ssr)/./node_modules/is-electron/index.js\")\n\nconst IS_ENV_WITH_DOM = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\n// @ts-ignore\nconst IS_ELECTRON = isElectron()\nconst IS_BROWSER = IS_ENV_WITH_DOM && !IS_ELECTRON\nconst IS_ELECTRON_MAIN = IS_ELECTRON && !IS_ENV_WITH_DOM\nconst IS_ELECTRON_RENDERER = IS_ELECTRON && IS_ENV_WITH_DOM\nconst IS_NODE =  true && typeof process !== 'undefined' && typeof process.release !== 'undefined' && process.release.name === 'node' && !IS_ELECTRON\n// @ts-ignore - we either ignore worker scope or dom scope\nconst IS_WEBWORKER = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\nconst IS_TEST = typeof process !== 'undefined' && typeof process.env !== 'undefined' && \"development\" === 'test'\nconst IS_REACT_NATIVE = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n\nmodule.exports = {\n  isTest: IS_TEST,\n  isElectron: IS_ELECTRON,\n  isElectronMain: IS_ELECTRON_MAIN,\n  isElectronRenderer: IS_ELECTRON_RENDERER,\n  isNode: IS_NODE,\n  /**\n   * Detects browser main thread  **NOT** web worker or service worker\n   */\n  isBrowser: IS_BROWSER,\n  isWebWorker: IS_WEBWORKER,\n  isEnvWithDom: IS_ENV_WITH_DOM,\n  isReactNative: IS_REACT_NATIVE\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy11dGlscy9zcmMvZW52LmpzIiwibWFwcGluZ3MiOiJBQUFZO0FBQ1osbUJBQW1CLG1CQUFPLENBQUMsOERBQWE7O0FBRXhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixLQUE2QjtBQUM3QztBQUNBO0FBQ0Esd0ZBQXdGLGFBQW9CO0FBQzVHOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aXBwaWZ5Ly4vbm9kZV9tb2R1bGVzL2lwZnMtdXRpbHMvc3JjL2Vudi5qcz9hZjhlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuY29uc3QgaXNFbGVjdHJvbiA9IHJlcXVpcmUoJ2lzLWVsZWN0cm9uJylcblxuY29uc3QgSVNfRU5WX1dJVEhfRE9NID0gdHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIGRvY3VtZW50ID09PSAnb2JqZWN0JyAmJiBkb2N1bWVudC5ub2RlVHlwZSA9PT0gOVxuLy8gQHRzLWlnbm9yZVxuY29uc3QgSVNfRUxFQ1RST04gPSBpc0VsZWN0cm9uKClcbmNvbnN0IElTX0JST1dTRVIgPSBJU19FTlZfV0lUSF9ET00gJiYgIUlTX0VMRUNUUk9OXG5jb25zdCBJU19FTEVDVFJPTl9NQUlOID0gSVNfRUxFQ1RST04gJiYgIUlTX0VOVl9XSVRIX0RPTVxuY29uc3QgSVNfRUxFQ1RST05fUkVOREVSRVIgPSBJU19FTEVDVFJPTiAmJiBJU19FTlZfV0lUSF9ET01cbmNvbnN0IElTX05PREUgPSB0eXBlb2YgcmVxdWlyZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHByb2Nlc3MucmVsZWFzZSAhPT0gJ3VuZGVmaW5lZCcgJiYgcHJvY2Vzcy5yZWxlYXNlLm5hbWUgPT09ICdub2RlJyAmJiAhSVNfRUxFQ1RST05cbi8vIEB0cy1pZ25vcmUgLSB3ZSBlaXRoZXIgaWdub3JlIHdvcmtlciBzY29wZSBvciBkb20gc2NvcGVcbmNvbnN0IElTX1dFQldPUktFUiA9IHR5cGVvZiBpbXBvcnRTY3JpcHRzID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgV29ya2VyR2xvYmFsU2NvcGUgIT09ICd1bmRlZmluZWQnICYmIHNlbGYgaW5zdGFuY2VvZiBXb3JrZXJHbG9iYWxTY29wZVxuY29uc3QgSVNfVEVTVCA9IHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgcHJvY2Vzcy5lbnYgIT09ICd1bmRlZmluZWQnICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAndGVzdCdcbmNvbnN0IElTX1JFQUNUX05BVElWRSA9IHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc1Rlc3Q6IElTX1RFU1QsXG4gIGlzRWxlY3Ryb246IElTX0VMRUNUUk9OLFxuICBpc0VsZWN0cm9uTWFpbjogSVNfRUxFQ1RST05fTUFJTixcbiAgaXNFbGVjdHJvblJlbmRlcmVyOiBJU19FTEVDVFJPTl9SRU5ERVJFUixcbiAgaXNOb2RlOiBJU19OT0RFLFxuICAvKipcbiAgICogRGV0ZWN0cyBicm93c2VyIG1haW4gdGhyZWFkICAqKk5PVCoqIHdlYiB3b3JrZXIgb3Igc2VydmljZSB3b3JrZXJcbiAgICovXG4gIGlzQnJvd3NlcjogSVNfQlJPV1NFUixcbiAgaXNXZWJXb3JrZXI6IElTX1dFQldPUktFUixcbiAgaXNFbnZXaXRoRG9tOiBJU19FTlZfV0lUSF9ET00sXG4gIGlzUmVhY3ROYXRpdmU6IElTX1JFQUNUX05BVElWRVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-utils/src/env.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-utils/src/files/glob-source.js":
/*!**********************************************************!*\
  !*** ./node_modules/ipfs-utils/src/files/glob-source.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst fsp = (__webpack_require__(/*! fs */ \"fs\").promises)\nconst fs = __webpack_require__(/*! fs */ \"fs\")\nconst glob = __webpack_require__(/*! it-glob */ \"(ssr)/./node_modules/it-glob/index.js\")\nconst Path = __webpack_require__(/*! path */ \"path\")\nconst errCode = __webpack_require__(/*! err-code */ \"(ssr)/./node_modules/err-code/index.js\")\n\n/**\n * Create an async iterator that yields paths that match requested glob pattern\n *\n * @param {string} cwd - The directory to start matching the pattern in\n * @param {string} pattern - Glob pattern to match\n * @param {import('../types').GlobSourceOptions} [options] - Optional options\n * @returns {AsyncGenerator<import('../types').GlobSourceResult, void, unknown>} File objects that match glob\n */\nmodule.exports = async function * globSource (cwd, pattern, options) {\n  options = options || {}\n\n  if (typeof pattern !== 'string') {\n    throw errCode(\n      new Error('Pattern must be a string'),\n      'ERR_INVALID_PATH',\n      { pattern }\n    )\n  }\n\n  if (!Path.isAbsolute(cwd)) {\n    cwd = Path.resolve(process.cwd(), cwd)\n  }\n\n  const globOptions = Object.assign({}, {\n    nodir: false,\n    realpath: false,\n    absolute: true,\n    dot: Boolean(options.hidden),\n    follow: options.followSymlinks != null ? options.followSymlinks : true\n  })\n\n  for await (const p of glob(cwd, pattern, globOptions)) {\n    const stat = await fsp.stat(p)\n\n    let mode = options.mode\n\n    if (options.preserveMode) {\n      mode = stat.mode\n    }\n\n    let mtime = options.mtime\n\n    if (options.preserveMtime) {\n      mtime = stat.mtime\n    }\n\n    yield {\n      path: toPosix(p.replace(cwd, '')),\n      content: stat.isFile() ? fs.createReadStream(p) : undefined,\n      mode,\n      mtime\n    }\n  }\n}\n\n/**\n * @param {string} path\n */\nconst toPosix = path => path.replace(/\\\\/g, '/')\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy11dGlscy9zcmMvZmlsZXMvZ2xvYi1zb3VyY2UuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVosWUFBWSw4Q0FBc0I7QUFDbEMsV0FBVyxtQkFBTyxDQUFDLGNBQUk7QUFDdkIsYUFBYSxtQkFBTyxDQUFDLHNEQUFTO0FBQzlCLGFBQWEsbUJBQU8sQ0FBQyxrQkFBTTtBQUMzQixnQkFBZ0IsbUJBQU8sQ0FBQyx3REFBVTs7QUFFbEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLHNDQUFzQztBQUNqRCxhQUFhLG9FQUFvRTtBQUNqRjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aXBwaWZ5Ly4vbm9kZV9tb2R1bGVzL2lwZnMtdXRpbHMvc3JjL2ZpbGVzL2dsb2Itc291cmNlLmpzPzk0ZmEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IGZzcCA9IHJlcXVpcmUoJ2ZzJykucHJvbWlzZXNcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKVxuY29uc3QgZ2xvYiA9IHJlcXVpcmUoJ2l0LWdsb2InKVxuY29uc3QgUGF0aCA9IHJlcXVpcmUoJ3BhdGgnKVxuY29uc3QgZXJyQ29kZSA9IHJlcXVpcmUoJ2Vyci1jb2RlJylcblxuLyoqXG4gKiBDcmVhdGUgYW4gYXN5bmMgaXRlcmF0b3IgdGhhdCB5aWVsZHMgcGF0aHMgdGhhdCBtYXRjaCByZXF1ZXN0ZWQgZ2xvYiBwYXR0ZXJuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGN3ZCAtIFRoZSBkaXJlY3RvcnkgdG8gc3RhcnQgbWF0Y2hpbmcgdGhlIHBhdHRlcm4gaW5cbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXR0ZXJuIC0gR2xvYiBwYXR0ZXJuIHRvIG1hdGNoXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vdHlwZXMnKS5HbG9iU291cmNlT3B0aW9uc30gW29wdGlvbnNdIC0gT3B0aW9uYWwgb3B0aW9uc1xuICogQHJldHVybnMge0FzeW5jR2VuZXJhdG9yPGltcG9ydCgnLi4vdHlwZXMnKS5HbG9iU291cmNlUmVzdWx0LCB2b2lkLCB1bmtub3duPn0gRmlsZSBvYmplY3RzIHRoYXQgbWF0Y2ggZ2xvYlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGFzeW5jIGZ1bmN0aW9uICogZ2xvYlNvdXJjZSAoY3dkLCBwYXR0ZXJuLCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKHR5cGVvZiBwYXR0ZXJuICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IGVyckNvZGUoXG4gICAgICBuZXcgRXJyb3IoJ1BhdHRlcm4gbXVzdCBiZSBhIHN0cmluZycpLFxuICAgICAgJ0VSUl9JTlZBTElEX1BBVEgnLFxuICAgICAgeyBwYXR0ZXJuIH1cbiAgICApXG4gIH1cblxuICBpZiAoIVBhdGguaXNBYnNvbHV0ZShjd2QpKSB7XG4gICAgY3dkID0gUGF0aC5yZXNvbHZlKHByb2Nlc3MuY3dkKCksIGN3ZClcbiAgfVxuXG4gIGNvbnN0IGdsb2JPcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwge1xuICAgIG5vZGlyOiBmYWxzZSxcbiAgICByZWFscGF0aDogZmFsc2UsXG4gICAgYWJzb2x1dGU6IHRydWUsXG4gICAgZG90OiBCb29sZWFuKG9wdGlvbnMuaGlkZGVuKSxcbiAgICBmb2xsb3c6IG9wdGlvbnMuZm9sbG93U3ltbGlua3MgIT0gbnVsbCA/IG9wdGlvbnMuZm9sbG93U3ltbGlua3MgOiB0cnVlXG4gIH0pXG5cbiAgZm9yIGF3YWl0IChjb25zdCBwIG9mIGdsb2IoY3dkLCBwYXR0ZXJuLCBnbG9iT3B0aW9ucykpIHtcbiAgICBjb25zdCBzdGF0ID0gYXdhaXQgZnNwLnN0YXQocClcblxuICAgIGxldCBtb2RlID0gb3B0aW9ucy5tb2RlXG5cbiAgICBpZiAob3B0aW9ucy5wcmVzZXJ2ZU1vZGUpIHtcbiAgICAgIG1vZGUgPSBzdGF0Lm1vZGVcbiAgICB9XG5cbiAgICBsZXQgbXRpbWUgPSBvcHRpb25zLm10aW1lXG5cbiAgICBpZiAob3B0aW9ucy5wcmVzZXJ2ZU10aW1lKSB7XG4gICAgICBtdGltZSA9IHN0YXQubXRpbWVcbiAgICB9XG5cbiAgICB5aWVsZCB7XG4gICAgICBwYXRoOiB0b1Bvc2l4KHAucmVwbGFjZShjd2QsICcnKSksXG4gICAgICBjb250ZW50OiBzdGF0LmlzRmlsZSgpID8gZnMuY3JlYXRlUmVhZFN0cmVhbShwKSA6IHVuZGVmaW5lZCxcbiAgICAgIG1vZGUsXG4gICAgICBtdGltZVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoXG4gKi9cbmNvbnN0IHRvUG9zaXggPSBwYXRoID0+IHBhdGgucmVwbGFjZSgvXFxcXC9nLCAnLycpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-utils/src/files/glob-source.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-utils/src/files/url-source.js":
/*!*********************************************************!*\
  !*** ./node_modules/ipfs-utils/src/files/url-source.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst HTTP = __webpack_require__(/*! ../http */ \"(ssr)/./node_modules/ipfs-utils/src/http.js\")\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {{ path: string; content?: AsyncIterable<Uint8Array> }}\n */\nconst urlSource = (url, options) => {\n  return {\n    path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\n    content: readURLContent(url, options)\n  }\n}\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {AsyncIterable<Uint8Array>}\n */\nasync function * readURLContent (url, options) {\n  const http = new HTTP()\n  const response = await http.get(url, options)\n\n  yield * response.iterator()\n}\n\nmodule.exports = urlSource\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy11dGlscy9zcmMvZmlsZXMvdXJsLXNvdXJjZS5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWixhQUFhLG1CQUFPLENBQUMsNERBQVM7O0FBRTlCO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxnQ0FBZ0M7QUFDM0MsZUFBZSxjQUFjO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxnQ0FBZ0M7QUFDM0MsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aXBwaWZ5Ly4vbm9kZV9tb2R1bGVzL2lwZnMtdXRpbHMvc3JjL2ZpbGVzL3VybC1zb3VyY2UuanM/MDQyOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3QgSFRUUCA9IHJlcXVpcmUoJy4uL2h0dHAnKVxuXG4vKipcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsXG4gKiBAcGFyYW0ge2ltcG9ydChcIi4uL3R5cGVzXCIpLkhUVFBPcHRpb25zfSBbb3B0aW9uc11cbiAqIEByZXR1cm5zIHt7IHBhdGg6IHN0cmluZzsgY29udGVudD86IEFzeW5jSXRlcmFibGU8VWludDhBcnJheT4gfX1cbiAqL1xuY29uc3QgdXJsU291cmNlID0gKHVybCwgb3B0aW9ucykgPT4ge1xuICByZXR1cm4ge1xuICAgIHBhdGg6IGRlY29kZVVSSUNvbXBvbmVudChuZXcgVVJMKHVybCkucGF0aG5hbWUuc3BsaXQoJy8nKS5wb3AoKSB8fCAnJyksXG4gICAgY29udGVudDogcmVhZFVSTENvbnRlbnQodXJsLCBvcHRpb25zKVxuICB9XG59XG5cbi8qKlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcbiAqIEBwYXJhbSB7aW1wb3J0KFwiLi4vdHlwZXNcIikuSFRUUE9wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMge0FzeW5jSXRlcmFibGU8VWludDhBcnJheT59XG4gKi9cbmFzeW5jIGZ1bmN0aW9uICogcmVhZFVSTENvbnRlbnQgKHVybCwgb3B0aW9ucykge1xuICBjb25zdCBodHRwID0gbmV3IEhUVFAoKVxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGh0dHAuZ2V0KHVybCwgb3B0aW9ucylcblxuICB5aWVsZCAqIHJlc3BvbnNlLml0ZXJhdG9yKClcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB1cmxTb3VyY2VcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-utils/src/files/url-source.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-utils/src/http.js":
/*!*********************************************!*\
  !*** ./node_modules/ipfs-utils/src/http.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* eslint-disable no-undef */\n\n\nconst { fetch, Request, Headers } = __webpack_require__(/*! ./http/fetch */ \"(ssr)/./node_modules/ipfs-utils/src/http/fetch.js\")\nconst { TimeoutError, HTTPError } = __webpack_require__(/*! ./http/error */ \"(ssr)/./node_modules/ipfs-utils/src/http/error.js\")\nconst merge = (__webpack_require__(/*! merge-options */ \"(ssr)/./node_modules/merge-options/index.js\").bind)({ ignoreUndefined: true })\nconst { URL, URLSearchParams } = __webpack_require__(/*! iso-url */ \"(ssr)/./node_modules/iso-url/index.js\")\nconst anySignal = __webpack_require__(/*! any-signal */ \"(ssr)/./node_modules/any-signal/index.js\")\nconst browserReableStreamToIt = __webpack_require__(/*! browser-readablestream-to-it */ \"(ssr)/./node_modules/ipfs-utils/node_modules/browser-readablestream-to-it/index.js\")\nconst { isBrowser, isWebWorker } = __webpack_require__(/*! ./env */ \"(ssr)/./node_modules/ipfs-utils/src/env.js\")\nconst all = __webpack_require__(/*! it-all */ \"(ssr)/./node_modules/ipfs-utils/node_modules/it-all/index.js\")\n\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\nconst timeout = (promise, ms, abortController) => {\n  if (ms === undefined) {\n    return promise\n  }\n\n  const start = Date.now()\n\n  const timedOut = () => {\n    const time = Date.now() - start\n\n    return time >= ms\n  }\n\n  return new Promise((resolve, reject) => {\n    const timeoutID = setTimeout(() => {\n      if (timedOut()) {\n        reject(new TimeoutError())\n        abortController.abort()\n      }\n    }, ms)\n\n    /**\n     * @param {(value: any) => void } next\n     */\n    const after = (next) => {\n      /**\n       * @param {any} res\n       */\n      const fn = (res) => {\n        clearTimeout(timeoutID)\n\n        if (timedOut()) {\n          reject(new TimeoutError())\n          return\n        }\n\n        next(res)\n      }\n      return fn\n    }\n\n    promise\n      .then(after(resolve), after(reject))\n  })\n}\n\nconst defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n}\n\nclass HTTP {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  constructor (options = {}) {\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options)\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n  async fetch (resource, options = {}) {\n    /** @type {HTTPOptions} */\n    const opts = merge(this.opts, options)\n    // @ts-expect-error\n    const headers = new Headers(opts.headers)\n\n    // validate resource type\n    // @ts-expect-error\n    if (typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request)) {\n      throw new TypeError('`resource` must be a string, URL, or Request')\n    }\n\n    const url = new URL(resource.toString(), opts.base)\n\n    const {\n      searchParams,\n      transformSearchParams,\n      json\n    } = opts\n\n    if (searchParams) {\n      if (typeof transformSearchParams === 'function') {\n        // @ts-ignore\n        url.search = transformSearchParams(new URLSearchParams(opts.searchParams))\n      } else {\n        // @ts-ignore\n        url.search = new URLSearchParams(opts.searchParams)\n      }\n    }\n\n    if (json) {\n      opts.body = JSON.stringify(opts.json)\n      headers.set('content-type', 'application/json')\n    }\n\n    const abortController = new AbortController()\n    // @ts-ignore\n    const signal = anySignal([abortController.signal, opts.signal])\n\n    if (globalThis.ReadableStream != null && opts.body instanceof globalThis.ReadableStream && (isBrowser || isWebWorker)) {\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1387483\n      opts.body = new Blob(await all(browserReableStreamToIt(opts.body)))\n    }\n\n    /** @type {ExtendedResponse} */\n    // @ts-expect-error additional fields are assigned below\n    const response = await timeout(\n      fetch(\n        url.toString(),\n        {\n          ...opts,\n          signal,\n          // @ts-expect-error non-browser fetch implementations may take extra options\n          timeout: undefined,\n          headers,\n\n          // https://fetch.spec.whatwg.org/#dom-requestinit-duplex\n          // https://github.com/whatwg/fetch/issues/1254\n          duplex: 'half'\n        }\n      ),\n      opts.timeout,\n      abortController\n    )\n\n    if (!response.ok && opts.throwHttpErrors) {\n      if (opts.handleError) {\n        await opts.handleError(response)\n      }\n      throw new HTTPError(response)\n    }\n\n    response.iterator = async function * () {\n      yield * fromStream(response.body)\n    }\n\n    response.ndjson = async function * () {\n      for await (const chunk of ndjson(response.iterator())) {\n        if (options.transform) {\n          yield options.transform(chunk)\n        } else {\n          yield chunk\n        }\n      }\n    }\n\n    return response\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  post (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'POST' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  get (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'GET' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  put (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'PUT' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  delete (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'DELETE' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  options (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'OPTIONS' })\n  }\n}\n\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\nconst ndjson = async function * (source) {\n  const decoder = new TextDecoder()\n  let buf = ''\n\n  for await (const chunk of source) {\n    buf += decoder.decode(chunk, { stream: true })\n    const lines = buf.split(/\\r?\\n/)\n\n    for (let i = 0; i < lines.length - 1; i++) {\n      const l = lines[i].trim()\n      if (l.length > 0) {\n        yield JSON.parse(l)\n      }\n    }\n    buf = lines[lines.length - 1]\n  }\n  buf += decoder.decode()\n  buf = buf.trim()\n  if (buf.length !== 0) {\n    yield JSON.parse(buf)\n  }\n}\n\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\nconst fromStream = (source) => {\n  if (isAsyncIterable(source)) {\n    return source\n  }\n\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    const iter = source[Symbol.asyncIterator]()\n    return {\n      [Symbol.asyncIterator] () {\n        return {\n          next: iter.next.bind(iter),\n          return (value) {\n            source.destroy()\n            if (typeof iter.return === 'function') {\n              return iter.return()\n            }\n            return Promise.resolve({ done: true, value })\n          }\n        }\n      }\n    }\n  }\n\n  if (isWebReadableStream(source)) {\n    const reader = source.getReader()\n    return (async function * () {\n      try {\n        while (true) {\n          // Read from the stream\n          const { done, value } = await reader.read()\n          // Exit if we're done\n          if (done) return\n          // Else yield the chunk\n          if (value) {\n            yield value\n          }\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  throw new TypeError('Body can\\'t be converted to AsyncIterable')\n}\n\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\nconst isAsyncIterable = (value) => {\n  return typeof value === 'object' &&\n  value !== null &&\n  typeof /** @type {any} */(value)[Symbol.asyncIterator] === 'function'\n}\n\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\nconst isWebReadableStream = (value) => {\n  return value && typeof /** @type {any} */(value).getReader === 'function'\n}\n\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\nconst isNodeReadableStream = (value) =>\n  Object.prototype.hasOwnProperty.call(value, 'readable') &&\n  Object.prototype.hasOwnProperty.call(value, 'writable')\n\nHTTP.HTTPError = HTTPError\nHTTP.TimeoutError = TimeoutError\nHTTP.streamToAsyncIterator = fromStream\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options)\n\nmodule.exports = HTTP\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-utils/src/http.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-utils/src/http/error.js":
/*!***************************************************!*\
  !*** ./node_modules/ipfs-utils/src/http/error.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nclass TimeoutError extends Error {\n  constructor (message = 'Request timed out') {\n    super(message)\n    this.name = 'TimeoutError'\n  }\n}\nexports.TimeoutError = TimeoutError\n\nclass AbortError extends Error {\n  constructor (message = 'The operation was aborted.') {\n    super(message)\n    this.name = 'AbortError'\n  }\n}\nexports.AbortError = AbortError\n\nclass HTTPError extends Error {\n  /**\n   * @param {Response} response\n   */\n  constructor (response) {\n    super(response.statusText)\n    this.name = 'HTTPError'\n    this.response = response\n  }\n}\nexports.HTTPError = HTTPError\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy11dGlscy9zcmMvaHR0cC9lcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7O0FBRXBCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjs7QUFFbEI7QUFDQTtBQUNBLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL3RpcHBpZnkvLi9ub2RlX21vZHVsZXMvaXBmcy11dGlscy9zcmMvaHR0cC9lcnJvci5qcz9hOWE5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jbGFzcyBUaW1lb3V0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yIChtZXNzYWdlID0gJ1JlcXVlc3QgdGltZWQgb3V0Jykge1xuICAgIHN1cGVyKG1lc3NhZ2UpXG4gICAgdGhpcy5uYW1lID0gJ1RpbWVvdXRFcnJvcidcbiAgfVxufVxuZXhwb3J0cy5UaW1lb3V0RXJyb3IgPSBUaW1lb3V0RXJyb3JcblxuY2xhc3MgQWJvcnRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IgKG1lc3NhZ2UgPSAnVGhlIG9wZXJhdGlvbiB3YXMgYWJvcnRlZC4nKSB7XG4gICAgc3VwZXIobWVzc2FnZSlcbiAgICB0aGlzLm5hbWUgPSAnQWJvcnRFcnJvcidcbiAgfVxufVxuZXhwb3J0cy5BYm9ydEVycm9yID0gQWJvcnRFcnJvclxuXG5jbGFzcyBIVFRQRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge1Jlc3BvbnNlfSByZXNwb25zZVxuICAgKi9cbiAgY29uc3RydWN0b3IgKHJlc3BvbnNlKSB7XG4gICAgc3VwZXIocmVzcG9uc2Uuc3RhdHVzVGV4dClcbiAgICB0aGlzLm5hbWUgPSAnSFRUUEVycm9yJ1xuICAgIHRoaXMucmVzcG9uc2UgPSByZXNwb25zZVxuICB9XG59XG5leHBvcnRzLkhUVFBFcnJvciA9IEhUVFBFcnJvclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-utils/src/http/error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ipfs-utils/src/http/fetch.js":
/*!***************************************************!*\
  !*** ./node_modules/ipfs-utils/src/http/fetch.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/**\n * @typedef {object} fetchImpl\n * @property {globalThis.fetch} fetchImpl.fetch\n * @property {globalThis.Request} fetchImpl.Request\n * @property {globalThis.Response} fetchImpl.Response\n * @property {globalThis.Headers} fetchImpl.Headers\n */\n\nlet implName = './fetch.node'\n\nif (typeof XMLHttpRequest === 'function') {\n  // Electron has `XMLHttpRequest` and should get the browser implementation\n  // instead of node.\n  implName = './fetch.browser'\n}\n\n/** @type {fetchImpl} */\nconst fetch = __webpack_require__(\"(ssr)/./node_modules/ipfs-utils/src/http sync recursive\")(implName)\n\nmodule.exports = fetch\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXBmcy11dGlscy9zcmMvaHR0cC9mZXRjaC5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjLGtCQUFrQjtBQUNoQyxjQUFjLG9CQUFvQjtBQUNsQyxjQUFjLHFCQUFxQjtBQUNuQyxjQUFjLG9CQUFvQjtBQUNsQzs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFdBQVcsV0FBVztBQUN0QixjQUFjLCtFQUFRLFFBQVEsQ0FBQzs7QUFFL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aXBwaWZ5Ly4vbm9kZV9tb2R1bGVzL2lwZnMtdXRpbHMvc3JjL2h0dHAvZmV0Y2guanM/ZTY2NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuLyoqXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBmZXRjaEltcGxcbiAqIEBwcm9wZXJ0eSB7Z2xvYmFsVGhpcy5mZXRjaH0gZmV0Y2hJbXBsLmZldGNoXG4gKiBAcHJvcGVydHkge2dsb2JhbFRoaXMuUmVxdWVzdH0gZmV0Y2hJbXBsLlJlcXVlc3RcbiAqIEBwcm9wZXJ0eSB7Z2xvYmFsVGhpcy5SZXNwb25zZX0gZmV0Y2hJbXBsLlJlc3BvbnNlXG4gKiBAcHJvcGVydHkge2dsb2JhbFRoaXMuSGVhZGVyc30gZmV0Y2hJbXBsLkhlYWRlcnNcbiAqL1xuXG5sZXQgaW1wbE5hbWUgPSAnLi9mZXRjaC5ub2RlJ1xuXG5pZiAodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ID09PSAnZnVuY3Rpb24nKSB7XG4gIC8vIEVsZWN0cm9uIGhhcyBgWE1MSHR0cFJlcXVlc3RgIGFuZCBzaG91bGQgZ2V0IHRoZSBicm93c2VyIGltcGxlbWVudGF0aW9uXG4gIC8vIGluc3RlYWQgb2Ygbm9kZS5cbiAgaW1wbE5hbWUgPSAnLi9mZXRjaC5icm93c2VyJ1xufVxuXG4vKiogQHR5cGUge2ZldGNoSW1wbH0gKi9cbmNvbnN0IGZldGNoID0gcmVxdWlyZShpbXBsTmFtZSlcblxubW9kdWxlLmV4cG9ydHMgPSBmZXRjaFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ipfs-utils/src/http/fetch.js\n");

/***/ })

};
;